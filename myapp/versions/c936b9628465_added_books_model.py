"""Added books model

Revision ID: c936b9628465
Revises: c13cbaa2910a
Create Date: 2025-03-13 10:12:26.088528

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c936b9628465'
down_revision: Union[str, None] = 'c13cbaa2910a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('salaries')
    op.drop_index('ix_employees_email', table_name='employees')
    op.drop_index('ix_employees_id', table_name='employees')
    op.drop_index('ix_employees_name', table_name='employees')
    op.drop_index('ix_employees_position', table_name='employees')
    op.drop_index('ix_employees_salary', table_name='employees')
    op.drop_table('employees')
    op.drop_table('user')
    op.drop_index('ix_projects_id', table_name='projects')
    op.drop_index('ix_projects_name', table_name='projects')
    op.drop_table('projects')
    op.drop_index('ix_departments_id', table_name='departments')
    op.drop_index('ix_departments_name', table_name='departments')
    op.drop_table('departments')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('departments_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='departments_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_departments_name', 'departments', ['name'], unique=False)
    op.create_index('ix_departments_id', 'departments', ['id'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('dept_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['dept_id'], ['departments.id'], name='projects_dept_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='projects_pkey')
    )
    op.create_index('ix_projects_name', 'projects', ['name'], unique=False)
    op.create_index('ix_projects_id', 'projects', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('current_status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('job_title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_pkey')
    )
    op.create_table('employees',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('employees_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('position', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('salary', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('dept_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['dept_id'], ['departments.id'], name='employees_dept_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='employees_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_employees_salary', 'employees', ['salary'], unique=False)
    op.create_index('ix_employees_position', 'employees', ['position'], unique=False)
    op.create_index('ix_employees_name', 'employees', ['name'], unique=False)
    op.create_index('ix_employees_id', 'employees', ['id'], unique=False)
    op.create_index('ix_employees_email', 'employees', ['email'], unique=True)
    op.create_table('salaries',
    sa.Column('emp_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['emp_id'], ['employees.id'], name='salaries_emp_id_fkey')
    )
    # ### end Alembic commands ###
